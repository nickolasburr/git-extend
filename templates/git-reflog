#!/usr/bin/env bash

###
### git-reflog: Add convenience options and default pretty format to git-reflog(1).
###

ERR_NOTREPO="Not a Git repository."

# Decorated `git reflog show` graph format style.
FORMAT="%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset"
NUM="10"
REGEX='^[0-9]+$'
ARGV=(
	"--abbrev-commit"
	"--date=relative"
	"--format=$FORMAT"
	"--max-count=$NUM"
)

# Command given to `git-reflog`.
COMMAND="$1"
shift

case "$COMMAND" in
	--help|-h)
		exec $GIT reflog --help

		exit 0
	;;
	show)
		while [[ $# -gt 0 ]]; do
			case "$1" in
				--all)
					if [[ ! "$($GIT rev-parse --is-inside-work-tree)" ]] 2>/dev/null; then
						printf '%s: %s\n' "$0" "$ERR_NOTREPO"

						exit 1
					fi

					shift

					# All refs contained in reflog.
					TOTAL="$($GIT --no-pager reflog show --pretty=format:'%gd' | tr ' ' '\n' | wc -l)"

					ARGV+=("--max-count=$TOTAL")

					shift
				;;
				--last)
					if [[ ! "$($GIT rev-parse --is-inside-work-tree)" ]] 2>/dev/null; then
						printf '%s: %s\n' "$0" "$ERR_NOTREPO"

						exit 1
					fi

					shift

					NUM="$1"

					if [[ ! $NUM =~ $REGEX ]]; then
						NUM="1"
					fi

					# All refs contained in reflog.
					TOTAL="$($GIT --no-pager reflog show --pretty=format:'%gd' | tr ' ' '\n' | wc -l)"

					if [[ $NUM -gt $TOTAL ]]; then
						NUM=$TOTAL
					fi

					ARGV+=("--max-count=$NUM")

					shift
				;;
				*)
					ARGV+=("$1")

					shift
				;;
			esac
		done
	;;
esac

exec $GIT reflog $COMMAND "${ARGV[@]}"
